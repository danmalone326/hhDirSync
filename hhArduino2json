#!/usr/bin/python3

# Reads the HH Arduino Bridges HTML page from stdin and outputs a json representation of the entries
# desired to be in the LDAP directory

# Importing the required modules 
import sys
import json
import mysql.connector

propertiesFilename = 'hhAgent.properties'
prop = {}
def readProperties():
    global prop
    with open(propertiesFilename, 'r') as f:
        for line in f:
            line = line.rstrip() #removes trailing whitespace and '\n' chars

            if "=" not in line: continue #skips blanks and comments w/o =
            if line.startswith("#"): continue #skips comments which contain =

            k, v = line.split("=", 1)
            prop[k] = v

def connectDB(host,user,passwd,schema):
    try:
        config = {
            "host": host,
            "user": user,
            "password": passwd,
            "database": schema,
        }
        db = mysql.connector.connect(**config)
        cursor = db.cursor()
        cursor.execute("SELECT VERSION()")
        results = cursor.fetchone()
        # Check if anything at all is returned
        if results:
            return db
        else:
            return None
    except mysql.connector.errors.ProgrammingError as ex:
        print("ERROR IN CONNECTION")
        print(ex)
        return None

readProperties()
db = connectDB(prop['dbHost'], prop['dbUser'], prop['dbPassword'], prop['dbSchema'])

baseDN='ou=phonebook,dc=hamshackhotline,dc=com'

result={}

# first add the container for these entries
result[baseDN]={
    'objectClass': ['top','organizationalUnit'],
    'ou': ['phonebook'],
    'description': ['container for entries']
}

baseDN='ou=arduino,ou=phonebook,dc=hamshackhotline,dc=com'
result[baseDN]={
    'objectClass': ['top','organizationalUnit'],
    'ou': ['arduino'],
    'description': ['container for entries']
}


if db:
    cursor = db.cursor()
    cursor.execute('select Id,Number,Channel,Description,City,State,Country,Frequency,plTone,Mode from hhArduino;')
    # 0 ID
    # 1 Number
    # 2 Channel
    # 3 Description
    # 4 City
    # 5 State
    # 6 Country
    # 7 Frequency
    # 8 plTone
    # 9 Mode

    for row in cursor.fetchall():
        number=str(row[1]).strip()
        channel=row[2].strip()
        description=row[3].strip()
        city=row[4].strip()
        state=row[5].strip()
        country=row[6].strip()
        frequency=row[7].strip()
        plTone=row[8].strip()
        mode=row[9].strip()

        callsign=description.split()[0].strip()
        id="al-"+number
        dn="hamshackhotlineComEntryID=" + id + ","+baseDN

        result[dn]={
            'objectClass': ['top','hamshackhotlineComEntry'],
            'cn': [description], 
            'givenName': [description],
            'name': [description],
            'callsign': [callsign],
            'telephoneNumber': [number], 
            'displayName': [description],
            'hamshackhotlineComEntryID': [id]
        }

json.dump(result,sys.stdout)
